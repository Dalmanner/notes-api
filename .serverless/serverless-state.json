{
  "service": {
    "service": "notes-api",
    "serviceObject": {
      "name": "notes-api"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "eu-north-1",
      "environment": {
        "JWT_SECRET": "mackan",
        "DYNAMODB_TABLE": "notesTable"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "SignupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-signup"
            }
          },
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-login"
            }
          },
          "GetNotesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-getNotes"
            }
          },
          "CreateNoteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-createNote"
            }
          },
          "UpdateNoteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-updateNote"
            }
          },
          "DeleteNoteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-deleteNote"
            }
          },
          "RestoreNoteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-restoreNote"
            }
          },
          "GetDeletedNotesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/notes-api-dev-getDeletedNotes"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "notes-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notes-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notes-api-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "notes-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SignupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                "S3Key": "serverless/notes-api/dev/1732539742520-2024-11-25T13:02:22.520Z/notes-api.zip"
              },
              "Handler": "handlers/user.signup",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-signup",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "mackan",
                  "DYNAMODB_TABLE": "notesTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignupLogGroup"
            ]
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                "S3Key": "serverless/notes-api/dev/1732539742520-2024-11-25T13:02:22.520Z/notes-api.zip"
              },
              "Handler": "handlers/user.login",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "mackan",
                  "DYNAMODB_TABLE": "notesTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "GetNotesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                "S3Key": "serverless/notes-api/dev/1732539742520-2024-11-25T13:02:22.520Z/notes-api.zip"
              },
              "Handler": "handlers/notes.getNotes",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-getNotes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "mackan",
                  "DYNAMODB_TABLE": "notesTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetNotesLogGroup"
            ]
          },
          "CreateNoteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                "S3Key": "serverless/notes-api/dev/1732539742520-2024-11-25T13:02:22.520Z/notes-api.zip"
              },
              "Handler": "handlers/notes.createNote",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-createNote",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "mackan",
                  "DYNAMODB_TABLE": "notesTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateNoteLogGroup"
            ]
          },
          "UpdateNoteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                "S3Key": "serverless/notes-api/dev/1732539742520-2024-11-25T13:02:22.520Z/notes-api.zip"
              },
              "Handler": "handlers/notes.updateNote",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-updateNote",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "mackan",
                  "DYNAMODB_TABLE": "notesTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateNoteLogGroup"
            ]
          },
          "DeleteNoteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                "S3Key": "serverless/notes-api/dev/1732539742520-2024-11-25T13:02:22.520Z/notes-api.zip"
              },
              "Handler": "handlers/notes.deleteNote",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-deleteNote",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "mackan",
                  "DYNAMODB_TABLE": "notesTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteNoteLogGroup"
            ]
          },
          "RestoreNoteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                "S3Key": "serverless/notes-api/dev/1732539742520-2024-11-25T13:02:22.520Z/notes-api.zip"
              },
              "Handler": "handlers/restore.restoreNote",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-restoreNote",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "mackan",
                  "DYNAMODB_TABLE": "notesTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "RestoreNoteLogGroup"
            ]
          },
          "GetDeletedNotesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                "S3Key": "serverless/notes-api/dev/1732539742520-2024-11-25T13:02:22.520Z/notes-api.zip"
              },
              "Handler": "handlers/restore.getDeletedNotes",
              "Runtime": "nodejs18.x",
              "FunctionName": "notes-api-dev-getDeletedNotes",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "JWT_SECRET": "mackan",
                  "DYNAMODB_TABLE": "notesTable"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetDeletedNotesLogGroup"
            ]
          },
          "SignupLambdaVersionSdmdFRrF5UNfAeOqTvGqJub59yrS5ZGoBcIaUOXsU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignupLambdaFunction"
              },
              "CodeSha256": "bBDxosfukNaEhofdIEP1Kpxr82P+j3tAeXTEp/DjFWM="
            }
          },
          "LoginLambdaVersionpWUMbxgQ0AEiqrZHs9mopJNpU7XKqyDwSlSGOhI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "bBDxosfukNaEhofdIEP1Kpxr82P+j3tAeXTEp/DjFWM="
            }
          },
          "GetNotesLambdaVersioneuCbVpq4llzqi78eNF4UNrkAC3hMWhSXMQBoTGDQg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetNotesLambdaFunction"
              },
              "CodeSha256": "bBDxosfukNaEhofdIEP1Kpxr82P+j3tAeXTEp/DjFWM="
            }
          },
          "CreateNoteLambdaVersionymQJATYXOxfjsACWzqJF7Gd0WPt8I9LC1k5UUx4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateNoteLambdaFunction"
              },
              "CodeSha256": "bBDxosfukNaEhofdIEP1Kpxr82P+j3tAeXTEp/DjFWM="
            }
          },
          "UpdateNoteLambdaVersionZEKUFKeQHoHVFXo3NmBuGIs80V4HKfSP8lbdRVxq4A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateNoteLambdaFunction"
              },
              "CodeSha256": "bBDxosfukNaEhofdIEP1Kpxr82P+j3tAeXTEp/DjFWM="
            }
          },
          "DeleteNoteLambdaVersionF74mdGiYjdroURDIvxE9X2Tg2DAQ4VjAi01DakZs4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteNoteLambdaFunction"
              },
              "CodeSha256": "bBDxosfukNaEhofdIEP1Kpxr82P+j3tAeXTEp/DjFWM="
            }
          },
          "RestoreNoteLambdaVersionSDumc779CdHfuaSM1y0QlG9C6PhGzN6A0DoE6tG8zw8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RestoreNoteLambdaFunction"
              },
              "CodeSha256": "bBDxosfukNaEhofdIEP1Kpxr82P+j3tAeXTEp/DjFWM="
            }
          },
          "GetDeletedNotesLambdaVersionrZ1BlniFzfgaOxkklJvWcwdGQ6xRMRuwNpekkSx1xA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDeletedNotesLambdaFunction"
              },
              "CodeSha256": "bBDxosfukNaEhofdIEP1Kpxr82P+j3tAeXTEp/DjFWM="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-notes-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceApi": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "api",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApi"
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiUserSignup": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApiUser"
              },
              "PathPart": "signup",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiUserLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApiUser"
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiNotes": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApi"
              },
              "PathPart": "notes",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiNotesIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApiNotes"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiNotesRestore": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApiNotes"
              },
              "PathPart": "restore",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiNotesRestoreIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApiNotesRestore"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiNotesDeleted": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceApiNotes"
              },
              "PathPart": "deleted",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodApiUserSignupPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiUserSignup"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SignupLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SignupLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodApiUserLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiUserLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LoginLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodApiNotesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiNotes"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetNotesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetNotesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodApiNotesPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiNotes"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateNoteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodApiNotesIdVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiNotesIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateNoteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodApiNotesIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiNotesIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteNoteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodApiNotesRestoreIdVarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiNotesRestoreIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RestoreNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "RestoreNoteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodApiNotesDeletedGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiNotesDeleted"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDeletedNotesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDeletedNotesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1732539733893": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodApiUserSignupPost",
              "ApiGatewayMethodApiUserLoginPost",
              "ApiGatewayMethodApiNotesGet",
              "ApiGatewayMethodApiNotesPost",
              "ApiGatewayMethodApiNotesIdVarPut",
              "ApiGatewayMethodApiNotesIdVarDelete",
              "ApiGatewayMethodApiNotesRestoreIdVarPost",
              "ApiGatewayMethodApiNotesDeletedGet"
            ]
          },
          "SignupLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LoginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetNotesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetNotesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateNoteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateNoteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateNoteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateNoteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteNoteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteNoteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RestoreNoteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RestoreNoteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetDeletedNotesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDeletedNotesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "NotesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "notesTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
            "Export": {
              "Name": "sls-notes-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "SignupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignupLambdaVersionSdmdFRrF5UNfAeOqTvGqJub59yrS5ZGoBcIaUOXsU"
            },
            "Export": {
              "Name": "sls-notes-api-dev-SignupLambdaFunctionQualifiedArn"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionpWUMbxgQ0AEiqrZHs9mopJNpU7XKqyDwSlSGOhI"
            },
            "Export": {
              "Name": "sls-notes-api-dev-LoginLambdaFunctionQualifiedArn"
            }
          },
          "GetNotesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetNotesLambdaVersioneuCbVpq4llzqi78eNF4UNrkAC3hMWhSXMQBoTGDQg"
            },
            "Export": {
              "Name": "sls-notes-api-dev-GetNotesLambdaFunctionQualifiedArn"
            }
          },
          "CreateNoteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateNoteLambdaVersionymQJATYXOxfjsACWzqJF7Gd0WPt8I9LC1k5UUx4"
            },
            "Export": {
              "Name": "sls-notes-api-dev-CreateNoteLambdaFunctionQualifiedArn"
            }
          },
          "UpdateNoteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateNoteLambdaVersionZEKUFKeQHoHVFXo3NmBuGIs80V4HKfSP8lbdRVxq4A"
            },
            "Export": {
              "Name": "sls-notes-api-dev-UpdateNoteLambdaFunctionQualifiedArn"
            }
          },
          "DeleteNoteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteNoteLambdaVersionF74mdGiYjdroURDIvxE9X2Tg2DAQ4VjAi01DakZs4"
            },
            "Export": {
              "Name": "sls-notes-api-dev-DeleteNoteLambdaFunctionQualifiedArn"
            }
          },
          "RestoreNoteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RestoreNoteLambdaVersionSDumc779CdHfuaSM1y0QlG9C6PhGzN6A0DoE6tG8zw8"
            },
            "Export": {
              "Name": "sls-notes-api-dev-RestoreNoteLambdaFunctionQualifiedArn"
            }
          },
          "GetDeletedNotesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDeletedNotesLambdaVersionrZ1BlniFzfgaOxkklJvWcwdGQ6xRMRuwNpekkSx1xA"
            },
            "Export": {
              "Name": "sls-notes-api-dev-GetDeletedNotesLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-notes-api-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "signup": {
        "handler": "handlers/user.signup",
        "events": [
          {
            "http": {
              "path": "api/user/signup",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "notes-api-dev-signup",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SignupLambdaVersionSdmdFRrF5UNfAeOqTvGqJub59yrS5ZGoBcIaUOXsU"
      },
      "login": {
        "handler": "handlers/user.login",
        "events": [
          {
            "http": {
              "path": "api/user/login",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "notes-api-dev-login",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "LoginLambdaVersionpWUMbxgQ0AEiqrZHs9mopJNpU7XKqyDwSlSGOhI"
      },
      "getNotes": {
        "handler": "handlers/notes.getNotes",
        "events": [
          {
            "http": {
              "path": "api/notes",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "notes-api-dev-getNotes",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetNotesLambdaVersioneuCbVpq4llzqi78eNF4UNrkAC3hMWhSXMQBoTGDQg"
      },
      "createNote": {
        "handler": "handlers/notes.createNote",
        "events": [
          {
            "http": {
              "path": "api/notes",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "notes-api-dev-createNote",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CreateNoteLambdaVersionymQJATYXOxfjsACWzqJF7Gd0WPt8I9LC1k5UUx4"
      },
      "updateNote": {
        "handler": "handlers/notes.updateNote",
        "events": [
          {
            "http": {
              "path": "api/notes/{id}",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "notes-api-dev-updateNote",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UpdateNoteLambdaVersionZEKUFKeQHoHVFXo3NmBuGIs80V4HKfSP8lbdRVxq4A"
      },
      "deleteNote": {
        "handler": "handlers/notes.deleteNote",
        "events": [
          {
            "http": {
              "path": "api/notes/{id}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "notes-api-dev-deleteNote",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "DeleteNoteLambdaVersionF74mdGiYjdroURDIvxE9X2Tg2DAQ4VjAi01DakZs4"
      },
      "restoreNote": {
        "handler": "handlers/restore.restoreNote",
        "events": [
          {
            "http": {
              "path": "api/notes/restore/{id}",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "notes-api-dev-restoreNote",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "RestoreNoteLambdaVersionSDumc779CdHfuaSM1y0QlG9C6PhGzN6A0DoE6tG8zw8"
      },
      "getDeletedNotes": {
        "handler": "handlers/restore.getDeletedNotes",
        "events": [
          {
            "http": {
              "path": "api/notes/deleted",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "notes-api-dev-getDeletedNotes",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "GetDeletedNotesLambdaVersionrZ1BlniFzfgaOxkklJvWcwdGQ6xRMRuwNpekkSx1xA"
      }
    },
    "resources": {
      "Resources": {
        "NotesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "notesTable",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "notes-api",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {},
    "artifact": "/Users/user/Desktop/Plugg/AWS/notes-api/.serverless/notes-api.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/notes-api/dev/1732539742520-2024-11-25T13:02:22.520Z",
    "artifact": "notes-api.zip"
  }
}