{
  "/Users/user/Desktop/Plugg/AWS/notes-api": {
    "versionSfCore": null,
    "versionFramework": "4.4.12",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "env": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "notes-api",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "eu-north-1",
              "environment": {
                "JWT_SECRET": "<REDACTED>",
                "DYNAMODB_TABLE": "notesTable"
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "SignupLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-signup"
                    }
                  },
                  "LoginLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-login"
                    }
                  },
                  "GetNotesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-getNotes"
                    }
                  },
                  "CreateNoteLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-createNote"
                    }
                  },
                  "UpdateNoteLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-updateNote"
                    }
                  },
                  "DeleteNoteLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-deleteNote"
                    }
                  },
                  "RestoreNoteLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-restoreNote"
                    }
                  },
                  "GetDeletedNotesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-getDeletedNotes"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "notes-api",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notes-api-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notes-api-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "notes-api",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "SignupLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/user.signup",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-signup",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "SignupLogGroup"
                    ]
                  },
                  "LoginLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/user.login",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-login",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "LoginLogGroup"
                    ]
                  },
                  "GetNotesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/notes.getNotes",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-getNotes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetNotesLogGroup"
                    ]
                  },
                  "CreateNoteLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/notes.createNote",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-createNote",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateNoteLogGroup"
                    ]
                  },
                  "UpdateNoteLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/notes.updateNote",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-updateNote",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateNoteLogGroup"
                    ]
                  },
                  "DeleteNoteLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/notes.deleteNote",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-deleteNote",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteNoteLogGroup"
                    ]
                  },
                  "RestoreNoteLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/restore.restoreNote",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-restoreNote",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "RestoreNoteLogGroup"
                    ]
                  },
                  "GetDeletedNotesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/restore.getDeletedNotes",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-getDeletedNotes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDeletedNotesLogGroup"
                    ]
                  },
                  "SignupLambdaVersionqc2HZdJu3ErLDq1Lin9Ck80YzBDECbrkrK713NPHt0": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "SignupLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "LoginLambdaVersionXsC7lCCRt7IMiB9bxVWaVkW9Ik698KxDaE5IkDImEo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "GetNotesLambdaVersion6CQiw9hdL09dLh7i4A9phUkoJyALTA28zGHOCGELhzY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetNotesLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "CreateNoteLambdaVersionWmFJdCRsj8669qIa6cFW1OxcaNMYSGw4pTUyr0D5TI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateNoteLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "UpdateNoteLambdaVersionQyVnK6cM4qtaRuUBRIo8kf0SRmzYyagMqmUH7fMJ4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateNoteLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "DeleteNoteLambdaVersionjJzs5O0MDQ8SvsuFWvYVTSnH2fDQzreF20TYfthWZU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteNoteLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "RestoreNoteLambdaVersion3Y3ojitTg8RR27hP6lye1KJlyNftWnUEaNBP96DMFg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RestoreNoteLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "GetDeletedNotesLambdaVersionS4xrnJ4WgWqyc3iekKADcFvnldw3HanvTgLA47r4Hs": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDeletedNotesLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-notes-api",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceApi": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "api",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiUser": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApi"
                      },
                      "PathPart": "user",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiUserSignup": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiUser"
                      },
                      "PathPart": "signup",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiUserLogin": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiUser"
                      },
                      "PathPart": "login",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiNotes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApi"
                      },
                      "PathPart": "notes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiNotesIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiNotes"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiNotesRestore": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiNotes"
                      },
                      "PathPart": "restore",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiNotesRestoreIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiNotesRestore"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiNotesDeleted": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiNotes"
                      },
                      "PathPart": "deleted",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodApiUserSignupPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiUserSignup"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "SignupLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "SignupLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiUserLoginPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiUserLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LoginLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LoginLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetNotesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetNotesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateNoteLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CreateNoteLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateNoteLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "UpdateNoteLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteNoteLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteNoteLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesRestoreIdVarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotesRestoreIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "RestoreNoteLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "RestoreNoteLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesDeletedGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotesDeleted"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDeletedNotesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDeletedNotesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1732628194382": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodApiUserSignupPost",
                      "ApiGatewayMethodApiUserLoginPost",
                      "ApiGatewayMethodApiNotesGet",
                      "ApiGatewayMethodApiNotesPost",
                      "ApiGatewayMethodApiNotesIdVarPut",
                      "ApiGatewayMethodApiNotesIdVarDelete",
                      "ApiGatewayMethodApiNotesRestoreIdVarPost",
                      "ApiGatewayMethodApiNotesDeletedGet"
                    ]
                  },
                  "SignupLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "SignupLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LoginLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetNotesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetNotesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateNoteLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateNoteLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteNoteLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "RestoreNoteLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RestoreNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDeletedNotesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDeletedNotesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "NotesTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "notesTable",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                    "Export": {
                      "Name": "sls-notes-api-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "SignupLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "SignupLambdaVersionqc2HZdJu3ErLDq1Lin9Ck80YzBDECbrkrK713NPHt0"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-SignupLambdaFunctionQualifiedArn"
                    }
                  },
                  "LoginLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginLambdaVersionXsC7lCCRt7IMiB9bxVWaVkW9Ik698KxDaE5IkDImEo"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-LoginLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetNotesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetNotesLambdaVersion6CQiw9hdL09dLh7i4A9phUkoJyALTA28zGHOCGELhzY"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-GetNotesLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateNoteLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateNoteLambdaVersionWmFJdCRsj8669qIa6cFW1OxcaNMYSGw4pTUyr0D5TI"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-CreateNoteLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateNoteLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateNoteLambdaVersionQyVnK6cM4qtaRuUBRIo8kf0SRmzYyagMqmUH7fMJ4"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-UpdateNoteLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteNoteLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteNoteLambdaVersionjJzs5O0MDQ8SvsuFWvYVTSnH2fDQzreF20TYfthWZU"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-DeleteNoteLambdaFunctionQualifiedArn"
                    }
                  },
                  "RestoreNoteLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RestoreNoteLambdaVersion3Y3ojitTg8RR27hP6lye1KJlyNftWnUEaNBP96DMFg"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-RestoreNoteLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDeletedNotesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDeletedNotesLambdaVersionS4xrnJ4WgWqyc3iekKADcFvnldw3HanvTgLA47r4Hs"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-GetDeletedNotesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "plugins": [
              "serverless-offline"
            ],
            "resources": {
              "Resources": {
                "NotesTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "notesTable",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              },
              "Outputs": {}
            },
            "functions": {
              "signup": {
                "handler": "handlers/user.signup",
                "events": [
                  {
                    "http": {
                      "path": "api/user/signup",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-signup",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "SignupLambdaVersionqc2HZdJu3ErLDq1Lin9Ck80YzBDECbrkrK713NPHt0"
              },
              "login": {
                "handler": "handlers/user.login",
                "events": [
                  {
                    "http": {
                      "path": "api/user/login",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-login",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "LoginLambdaVersionXsC7lCCRt7IMiB9bxVWaVkW9Ik698KxDaE5IkDImEo"
              },
              "getNotes": {
                "handler": "handlers/notes.getNotes",
                "events": [
                  {
                    "http": {
                      "path": "api/notes",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-getNotes",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "GetNotesLambdaVersion6CQiw9hdL09dLh7i4A9phUkoJyALTA28zGHOCGELhzY"
              },
              "createNote": {
                "handler": "handlers/notes.createNote",
                "events": [
                  {
                    "http": {
                      "path": "api/notes",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-createNote",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "CreateNoteLambdaVersionWmFJdCRsj8669qIa6cFW1OxcaNMYSGw4pTUyr0D5TI"
              },
              "updateNote": {
                "handler": "handlers/notes.updateNote",
                "events": [
                  {
                    "http": {
                      "path": "api/notes/{id}",
                      "method": "put",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-updateNote",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "UpdateNoteLambdaVersionQyVnK6cM4qtaRuUBRIo8kf0SRmzYyagMqmUH7fMJ4"
              },
              "deleteNote": {
                "handler": "handlers/notes.deleteNote",
                "events": [
                  {
                    "http": {
                      "path": "api/notes/{id}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-deleteNote",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "DeleteNoteLambdaVersionjJzs5O0MDQ8SvsuFWvYVTSnH2fDQzreF20TYfthWZU"
              },
              "restoreNote": {
                "handler": "handlers/restore.restoreNote",
                "events": [
                  {
                    "http": {
                      "path": "api/notes/restore/{id}",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-restoreNote",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "RestoreNoteLambdaVersion3Y3ojitTg8RR27hP6lye1KJlyNftWnUEaNBP96DMFg"
              },
              "getDeletedNotes": {
                "handler": "handlers/restore.getDeletedNotes",
                "events": [
                  {
                    "http": {
                      "path": "api/notes/deleted",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-getDeletedNotes",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "GetDeletedNotesLambdaVersionS4xrnJ4WgWqyc3iekKADcFvnldw3HanvTgLA47r4Hs"
              }
            }
          },
          "configFileDirPath": "/Users/user/Desktop/Plugg/AWS/notes-api",
          "config": {
            "type": "env"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:env",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "notes-api",
            "provider": {
              "name": "aws",
              "runtime": "nodejs18.x",
              "region": "eu-north-1",
              "environment": {
                "JWT_SECRET": "<REDACTED>",
                "DYNAMODB_TABLE": "notesTable"
              },
              "stage": "dev",
              "versionFunctions": true,
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "SignupLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-signup"
                    }
                  },
                  "LoginLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-login"
                    }
                  },
                  "GetNotesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-getNotes"
                    }
                  },
                  "CreateNoteLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-createNote"
                    }
                  },
                  "UpdateNoteLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-updateNote"
                    }
                  },
                  "DeleteNoteLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-deleteNote"
                    }
                  },
                  "RestoreNoteLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-restoreNote"
                    }
                  },
                  "GetDeletedNotesLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/notes-api-dev-getDeletedNotes"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "notes-api",
                                "dev",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notes-api-dev*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notes-api-dev*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "notes-api",
                            "dev",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "SignupLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/user.signup",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-signup",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "SignupLogGroup"
                    ]
                  },
                  "LoginLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/user.login",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-login",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "LoginLogGroup"
                    ]
                  },
                  "GetNotesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/notes.getNotes",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-getNotes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetNotesLogGroup"
                    ]
                  },
                  "CreateNoteLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/notes.createNote",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-createNote",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "CreateNoteLogGroup"
                    ]
                  },
                  "UpdateNoteLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/notes.updateNote",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-updateNote",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "UpdateNoteLogGroup"
                    ]
                  },
                  "DeleteNoteLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/notes.deleteNote",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-deleteNote",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "DeleteNoteLogGroup"
                    ]
                  },
                  "RestoreNoteLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/restore.restoreNote",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-restoreNote",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "RestoreNoteLogGroup"
                    ]
                  },
                  "GetDeletedNotesLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                        "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                      },
                      "Handler": "handlers/restore.getDeletedNotes",
                      "Runtime": "nodejs18.x",
                      "FunctionName": "notes-api-dev-getDeletedNotes",
                      "MemorySize": 1024,
                      "Timeout": 6,
                      "Environment": {
                        "Variables": {
                          "JWT_SECRET": "<REDACTED>",
                          "DYNAMODB_TABLE": "notesTable"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "GetDeletedNotesLogGroup"
                    ]
                  },
                  "SignupLambdaVersionqc2HZdJu3ErLDq1Lin9Ck80YzBDECbrkrK713NPHt0": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "SignupLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "LoginLambdaVersionXsC7lCCRt7IMiB9bxVWaVkW9Ik698KxDaE5IkDImEo": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "LoginLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "GetNotesLambdaVersion6CQiw9hdL09dLh7i4A9phUkoJyALTA28zGHOCGELhzY": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetNotesLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "CreateNoteLambdaVersionWmFJdCRsj8669qIa6cFW1OxcaNMYSGw4pTUyr0D5TI": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "CreateNoteLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "UpdateNoteLambdaVersionQyVnK6cM4qtaRuUBRIo8kf0SRmzYyagMqmUH7fMJ4": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "UpdateNoteLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "DeleteNoteLambdaVersionjJzs5O0MDQ8SvsuFWvYVTSnH2fDQzreF20TYfthWZU": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "DeleteNoteLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "RestoreNoteLambdaVersion3Y3ojitTg8RR27hP6lye1KJlyNftWnUEaNBP96DMFg": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "RestoreNoteLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "GetDeletedNotesLambdaVersionS4xrnJ4WgWqyc3iekKADcFvnldw3HanvTgLA47r4Hs": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "GetDeletedNotesLambdaFunction"
                      },
                      "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "dev-notes-api",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceApi": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "api",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiUser": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApi"
                      },
                      "PathPart": "user",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiUserSignup": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiUser"
                      },
                      "PathPart": "signup",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiUserLogin": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiUser"
                      },
                      "PathPart": "login",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiNotes": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApi"
                      },
                      "PathPart": "notes",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiNotesIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiNotes"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiNotesRestore": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiNotes"
                      },
                      "PathPart": "restore",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiNotesRestoreIdVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiNotesRestore"
                      },
                      "PathPart": "{id}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayResourceApiNotesDeleted": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Ref": "ApiGatewayResourceApiNotes"
                      },
                      "PathPart": "deleted",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodApiUserSignupPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiUserSignup"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "SignupLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "SignupLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiUserLoginPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiUserLogin"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "LoginLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "LoginLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetNotesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetNotesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotes"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "CreateNoteLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "CreateNoteLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesIdVarPut": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "PUT",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "UpdateNoteLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "UpdateNoteLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesIdVarDelete": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "DELETE",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotesIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "DeleteNoteLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "DeleteNoteLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesRestoreIdVarPost": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "POST",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotesRestoreIdVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "RestoreNoteLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "RestoreNoteLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodApiNotesDeletedGet": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "GET",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceApiNotesDeleted"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "GetDeletedNotesLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "GetDeletedNotesLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1732628194382": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "dev"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodApiUserSignupPost",
                      "ApiGatewayMethodApiUserLoginPost",
                      "ApiGatewayMethodApiNotesGet",
                      "ApiGatewayMethodApiNotesPost",
                      "ApiGatewayMethodApiNotesIdVarPut",
                      "ApiGatewayMethodApiNotesIdVarDelete",
                      "ApiGatewayMethodApiNotesRestoreIdVarPost",
                      "ApiGatewayMethodApiNotesDeletedGet"
                    ]
                  },
                  "SignupLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "SignupLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "LoginLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetNotesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetNotesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "CreateNoteLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "CreateNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "UpdateNoteLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "UpdateNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "DeleteNoteLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "DeleteNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "RestoreNoteLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "RestoreNoteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "GetDeletedNotesLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "GetDeletedNotesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  },
                  "NotesTable": {
                    "Type": "AWS::DynamoDB::Table",
                    "Properties": {
                      "TableName": "notesTable",
                      "AttributeDefinitions": [
                        {
                          "AttributeName": "id",
                          "AttributeType": "S"
                        }
                      ],
                      "KeySchema": [
                        {
                          "AttributeName": "id",
                          "KeyType": "HASH"
                        }
                      ],
                      "BillingMode": "PAY_PER_REQUEST"
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                    "Export": {
                      "Name": "sls-notes-api-dev-ServerlessDeploymentBucketName"
                    }
                  },
                  "SignupLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "SignupLambdaVersionqc2HZdJu3ErLDq1Lin9Ck80YzBDECbrkrK713NPHt0"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-SignupLambdaFunctionQualifiedArn"
                    }
                  },
                  "LoginLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "LoginLambdaVersionXsC7lCCRt7IMiB9bxVWaVkW9Ik698KxDaE5IkDImEo"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-LoginLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetNotesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetNotesLambdaVersion6CQiw9hdL09dLh7i4A9phUkoJyALTA28zGHOCGELhzY"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-GetNotesLambdaFunctionQualifiedArn"
                    }
                  },
                  "CreateNoteLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "CreateNoteLambdaVersionWmFJdCRsj8669qIa6cFW1OxcaNMYSGw4pTUyr0D5TI"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-CreateNoteLambdaFunctionQualifiedArn"
                    }
                  },
                  "UpdateNoteLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "UpdateNoteLambdaVersionQyVnK6cM4qtaRuUBRIo8kf0SRmzYyagMqmUH7fMJ4"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-UpdateNoteLambdaFunctionQualifiedArn"
                    }
                  },
                  "DeleteNoteLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "DeleteNoteLambdaVersionjJzs5O0MDQ8SvsuFWvYVTSnH2fDQzreF20TYfthWZU"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-DeleteNoteLambdaFunctionQualifiedArn"
                    }
                  },
                  "RestoreNoteLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "RestoreNoteLambdaVersion3Y3ojitTg8RR27hP6lye1KJlyNftWnUEaNBP96DMFg"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-RestoreNoteLambdaFunctionQualifiedArn"
                    }
                  },
                  "GetDeletedNotesLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "GetDeletedNotesLambdaVersionS4xrnJ4WgWqyc3iekKADcFvnldw3HanvTgLA47r4Hs"
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-GetDeletedNotesLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/dev"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-notes-api-dev-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "plugins": [
              "serverless-offline"
            ],
            "resources": {
              "Resources": {
                "NotesTable": {
                  "Type": "AWS::DynamoDB::Table",
                  "Properties": {
                    "TableName": "notesTable",
                    "AttributeDefinitions": [
                      {
                        "AttributeName": "id",
                        "AttributeType": "S"
                      }
                    ],
                    "KeySchema": [
                      {
                        "AttributeName": "id",
                        "KeyType": "HASH"
                      }
                    ],
                    "BillingMode": "PAY_PER_REQUEST"
                  }
                }
              },
              "Outputs": {}
            },
            "functions": {
              "signup": {
                "handler": "handlers/user.signup",
                "events": [
                  {
                    "http": {
                      "path": "api/user/signup",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-signup",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "SignupLambdaVersionqc2HZdJu3ErLDq1Lin9Ck80YzBDECbrkrK713NPHt0"
              },
              "login": {
                "handler": "handlers/user.login",
                "events": [
                  {
                    "http": {
                      "path": "api/user/login",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-login",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "LoginLambdaVersionXsC7lCCRt7IMiB9bxVWaVkW9Ik698KxDaE5IkDImEo"
              },
              "getNotes": {
                "handler": "handlers/notes.getNotes",
                "events": [
                  {
                    "http": {
                      "path": "api/notes",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-getNotes",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "GetNotesLambdaVersion6CQiw9hdL09dLh7i4A9phUkoJyALTA28zGHOCGELhzY"
              },
              "createNote": {
                "handler": "handlers/notes.createNote",
                "events": [
                  {
                    "http": {
                      "path": "api/notes",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-createNote",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "CreateNoteLambdaVersionWmFJdCRsj8669qIa6cFW1OxcaNMYSGw4pTUyr0D5TI"
              },
              "updateNote": {
                "handler": "handlers/notes.updateNote",
                "events": [
                  {
                    "http": {
                      "path": "api/notes/{id}",
                      "method": "put",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-updateNote",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "UpdateNoteLambdaVersionQyVnK6cM4qtaRuUBRIo8kf0SRmzYyagMqmUH7fMJ4"
              },
              "deleteNote": {
                "handler": "handlers/notes.deleteNote",
                "events": [
                  {
                    "http": {
                      "path": "api/notes/{id}",
                      "method": "delete",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-deleteNote",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "DeleteNoteLambdaVersionjJzs5O0MDQ8SvsuFWvYVTSnH2fDQzreF20TYfthWZU"
              },
              "restoreNote": {
                "handler": "handlers/restore.restoreNote",
                "events": [
                  {
                    "http": {
                      "path": "api/notes/restore/{id}",
                      "method": "post",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-restoreNote",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "RestoreNoteLambdaVersion3Y3ojitTg8RR27hP6lye1KJlyNftWnUEaNBP96DMFg"
              },
              "getDeletedNotes": {
                "handler": "handlers/restore.getDeletedNotes",
                "events": [
                  {
                    "http": {
                      "path": "api/notes/deleted",
                      "method": "get",
                      "integration": "AWS_PROXY"
                    }
                  }
                ],
                "name": "notes-api-dev-getDeletedNotes",
                "package": {},
                "memory": 1024,
                "timeout": 6,
                "runtime": "nodejs18.x",
                "vpc": {},
                "versionLogicalId": "GetDeletedNotesLambdaVersionS4xrnJ4WgWqyc3iekKADcFvnldw3HanvTgLA47r4Hs"
              }
            }
          },
          "configFileDirPath": "/Users/user/Desktop/Plugg/AWS/notes-api",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "/Users/user/Desktop/Plugg/AWS/notes-api",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "notes-api",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "region": "eu-north-1",
        "environment": {
          "JWT_SECRET": "<REDACTED>",
          "DYNAMODB_TABLE": "notesTable"
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "SignupLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/notes-api-dev-signup"
              }
            },
            "LoginLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/notes-api-dev-login"
              }
            },
            "GetNotesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/notes-api-dev-getNotes"
              }
            },
            "CreateNoteLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/notes-api-dev-createNote"
              }
            },
            "UpdateNoteLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/notes-api-dev-updateNote"
              }
            },
            "DeleteNoteLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/notes-api-dev-deleteNote"
              }
            },
            "RestoreNoteLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/notes-api-dev-restoreNote"
              }
            },
            "GetDeletedNotesLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/notes-api-dev-getDeletedNotes"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "notes-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notes-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/notes-api-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "notes-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "SignupLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                  "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                },
                "Handler": "handlers/user.signup",
                "Runtime": "nodejs18.x",
                "FunctionName": "notes-api-dev-signup",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE": "notesTable"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SignupLogGroup"
              ]
            },
            "LoginLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                  "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                },
                "Handler": "handlers/user.login",
                "Runtime": "nodejs18.x",
                "FunctionName": "notes-api-dev-login",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE": "notesTable"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "LoginLogGroup"
              ]
            },
            "GetNotesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                  "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                },
                "Handler": "handlers/notes.getNotes",
                "Runtime": "nodejs18.x",
                "FunctionName": "notes-api-dev-getNotes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE": "notesTable"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetNotesLogGroup"
              ]
            },
            "CreateNoteLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                  "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                },
                "Handler": "handlers/notes.createNote",
                "Runtime": "nodejs18.x",
                "FunctionName": "notes-api-dev-createNote",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE": "notesTable"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateNoteLogGroup"
              ]
            },
            "UpdateNoteLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                  "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                },
                "Handler": "handlers/notes.updateNote",
                "Runtime": "nodejs18.x",
                "FunctionName": "notes-api-dev-updateNote",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE": "notesTable"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateNoteLogGroup"
              ]
            },
            "DeleteNoteLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                  "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                },
                "Handler": "handlers/notes.deleteNote",
                "Runtime": "nodejs18.x",
                "FunctionName": "notes-api-dev-deleteNote",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE": "notesTable"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteNoteLogGroup"
              ]
            },
            "RestoreNoteLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                  "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                },
                "Handler": "handlers/restore.restoreNote",
                "Runtime": "nodejs18.x",
                "FunctionName": "notes-api-dev-restoreNote",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE": "notesTable"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "RestoreNoteLogGroup"
              ]
            },
            "GetDeletedNotesLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
                  "S3Key": "serverless/notes-api/dev/1732628203449-2024-11-26T13:36:43.449Z/notes-api.zip"
                },
                "Handler": "handlers/restore.getDeletedNotes",
                "Runtime": "nodejs18.x",
                "FunctionName": "notes-api-dev-getDeletedNotes",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "JWT_SECRET": "<REDACTED>",
                    "DYNAMODB_TABLE": "notesTable"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetDeletedNotesLogGroup"
              ]
            },
            "SignupLambdaVersionqc2HZdJu3ErLDq1Lin9Ck80YzBDECbrkrK713NPHt0": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SignupLambdaFunction"
                },
                "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
              }
            },
            "LoginLambdaVersionXsC7lCCRt7IMiB9bxVWaVkW9Ik698KxDaE5IkDImEo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "LoginLambdaFunction"
                },
                "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
              }
            },
            "GetNotesLambdaVersion6CQiw9hdL09dLh7i4A9phUkoJyALTA28zGHOCGELhzY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetNotesLambdaFunction"
                },
                "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
              }
            },
            "CreateNoteLambdaVersionWmFJdCRsj8669qIa6cFW1OxcaNMYSGw4pTUyr0D5TI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateNoteLambdaFunction"
                },
                "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
              }
            },
            "UpdateNoteLambdaVersionQyVnK6cM4qtaRuUBRIo8kf0SRmzYyagMqmUH7fMJ4": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateNoteLambdaFunction"
                },
                "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
              }
            },
            "DeleteNoteLambdaVersionjJzs5O0MDQ8SvsuFWvYVTSnH2fDQzreF20TYfthWZU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteNoteLambdaFunction"
                },
                "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
              }
            },
            "RestoreNoteLambdaVersion3Y3ojitTg8RR27hP6lye1KJlyNftWnUEaNBP96DMFg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "RestoreNoteLambdaFunction"
                },
                "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
              }
            },
            "GetDeletedNotesLambdaVersionS4xrnJ4WgWqyc3iekKADcFvnldw3HanvTgLA47r4Hs": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetDeletedNotesLambdaFunction"
                },
                "CodeSha256": "ieEfarRh4D4LVVXwmtZjzcPUR3z81Obe8TMUhsAEdHA="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-notes-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceApi": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "api",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceApiUser": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceApi"
                },
                "PathPart": "user",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceApiUserSignup": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceApiUser"
                },
                "PathPart": "signup",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceApiUserLogin": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceApiUser"
                },
                "PathPart": "login",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceApiNotes": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceApi"
                },
                "PathPart": "notes",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceApiNotesIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceApiNotes"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceApiNotesRestore": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceApiNotes"
                },
                "PathPart": "restore",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceApiNotesRestoreIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceApiNotesRestore"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceApiNotesDeleted": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceApiNotes"
                },
                "PathPart": "deleted",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodApiUserSignupPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceApiUserSignup"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "SignupLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "SignupLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodApiUserLoginPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceApiUserLogin"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "LoginLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "LoginLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodApiNotesGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceApiNotes"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetNotesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetNotesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodApiNotesPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceApiNotes"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateNoteLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateNoteLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodApiNotesIdVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceApiNotesIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateNoteLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UpdateNoteLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodApiNotesIdVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceApiNotesIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteNoteLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteNoteLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodApiNotesRestoreIdVarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceApiNotesRestoreIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "RestoreNoteLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "RestoreNoteLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodApiNotesDeletedGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceApiNotesDeleted"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetDeletedNotesLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetDeletedNotesLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1732628194382": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodApiUserSignupPost",
                "ApiGatewayMethodApiUserLoginPost",
                "ApiGatewayMethodApiNotesGet",
                "ApiGatewayMethodApiNotesPost",
                "ApiGatewayMethodApiNotesIdVarPut",
                "ApiGatewayMethodApiNotesIdVarDelete",
                "ApiGatewayMethodApiNotesRestoreIdVarPost",
                "ApiGatewayMethodApiNotesDeletedGet"
              ]
            },
            "SignupLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "SignupLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "LoginLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "LoginLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetNotesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetNotesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateNoteLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateNoteLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateNoteLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateNoteLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteNoteLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteNoteLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "RestoreNoteLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "RestoreNoteLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "GetDeletedNotesLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetDeletedNotesLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "NotesTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "notesTable",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
              "Export": {
                "Name": "sls-notes-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "SignupLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SignupLambdaVersionqc2HZdJu3ErLDq1Lin9Ck80YzBDECbrkrK713NPHt0"
              },
              "Export": {
                "Name": "sls-notes-api-dev-SignupLambdaFunctionQualifiedArn"
              }
            },
            "LoginLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "LoginLambdaVersionXsC7lCCRt7IMiB9bxVWaVkW9Ik698KxDaE5IkDImEo"
              },
              "Export": {
                "Name": "sls-notes-api-dev-LoginLambdaFunctionQualifiedArn"
              }
            },
            "GetNotesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetNotesLambdaVersion6CQiw9hdL09dLh7i4A9phUkoJyALTA28zGHOCGELhzY"
              },
              "Export": {
                "Name": "sls-notes-api-dev-GetNotesLambdaFunctionQualifiedArn"
              }
            },
            "CreateNoteLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateNoteLambdaVersionWmFJdCRsj8669qIa6cFW1OxcaNMYSGw4pTUyr0D5TI"
              },
              "Export": {
                "Name": "sls-notes-api-dev-CreateNoteLambdaFunctionQualifiedArn"
              }
            },
            "UpdateNoteLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateNoteLambdaVersionQyVnK6cM4qtaRuUBRIo8kf0SRmzYyagMqmUH7fMJ4"
              },
              "Export": {
                "Name": "sls-notes-api-dev-UpdateNoteLambdaFunctionQualifiedArn"
              }
            },
            "DeleteNoteLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteNoteLambdaVersionjJzs5O0MDQ8SvsuFWvYVTSnH2fDQzreF20TYfthWZU"
              },
              "Export": {
                "Name": "sls-notes-api-dev-DeleteNoteLambdaFunctionQualifiedArn"
              }
            },
            "RestoreNoteLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "RestoreNoteLambdaVersion3Y3ojitTg8RR27hP6lye1KJlyNftWnUEaNBP96DMFg"
              },
              "Export": {
                "Name": "sls-notes-api-dev-RestoreNoteLambdaFunctionQualifiedArn"
              }
            },
            "GetDeletedNotesLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetDeletedNotesLambdaVersionS4xrnJ4WgWqyc3iekKADcFvnldw3HanvTgLA47r4Hs"
              },
              "Export": {
                "Name": "sls-notes-api-dev-GetDeletedNotesLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-notes-api-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "plugins": [
        "serverless-offline"
      ],
      "resources": {
        "Resources": {
          "NotesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "notesTable",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {}
      },
      "functions": {
        "signup": {
          "handler": "handlers/user.signup",
          "events": [
            {
              "http": {
                "path": "api/user/signup",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "notes-api-dev-signup",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "SignupLambdaVersionqc2HZdJu3ErLDq1Lin9Ck80YzBDECbrkrK713NPHt0"
        },
        "login": {
          "handler": "handlers/user.login",
          "events": [
            {
              "http": {
                "path": "api/user/login",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "notes-api-dev-login",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "LoginLambdaVersionXsC7lCCRt7IMiB9bxVWaVkW9Ik698KxDaE5IkDImEo"
        },
        "getNotes": {
          "handler": "handlers/notes.getNotes",
          "events": [
            {
              "http": {
                "path": "api/notes",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "notes-api-dev-getNotes",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "GetNotesLambdaVersion6CQiw9hdL09dLh7i4A9phUkoJyALTA28zGHOCGELhzY"
        },
        "createNote": {
          "handler": "handlers/notes.createNote",
          "events": [
            {
              "http": {
                "path": "api/notes",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "notes-api-dev-createNote",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "CreateNoteLambdaVersionWmFJdCRsj8669qIa6cFW1OxcaNMYSGw4pTUyr0D5TI"
        },
        "updateNote": {
          "handler": "handlers/notes.updateNote",
          "events": [
            {
              "http": {
                "path": "api/notes/{id}",
                "method": "put",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "notes-api-dev-updateNote",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "UpdateNoteLambdaVersionQyVnK6cM4qtaRuUBRIo8kf0SRmzYyagMqmUH7fMJ4"
        },
        "deleteNote": {
          "handler": "handlers/notes.deleteNote",
          "events": [
            {
              "http": {
                "path": "api/notes/{id}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "notes-api-dev-deleteNote",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "DeleteNoteLambdaVersionjJzs5O0MDQ8SvsuFWvYVTSnH2fDQzreF20TYfthWZU"
        },
        "restoreNote": {
          "handler": "handlers/restore.restoreNote",
          "events": [
            {
              "http": {
                "path": "api/notes/restore/{id}",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "notes-api-dev-restoreNote",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "RestoreNoteLambdaVersion3Y3ojitTg8RR27hP6lye1KJlyNftWnUEaNBP96DMFg"
        },
        "getDeletedNotes": {
          "handler": "handlers/restore.getDeletedNotes",
          "events": [
            {
              "http": {
                "path": "api/notes/deleted",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "notes-api-dev-getDeletedNotes",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "GetDeletedNotesLambdaVersionS4xrnJ4WgWqyc3iekKADcFvnldw3HanvTgLA47r4Hs"
        }
      }
    },
    "serviceRawFile": "service: notes-api\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  region: eu-north-1\n  environment:\n    JWT_SECRET: ${env:JWT_SECRET}\n    DYNAMODB_TABLE: ${env:DYNAMODB_TABLE}\n\nplugins:\n  - serverless-offline\n\nresources:\n  Resources:\n    NotesTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: notesTable\n        AttributeDefinitions:\n          - AttributeName: id\n            AttributeType: S\n        KeySchema:\n          - AttributeName: id\n            KeyType: HASH\n        BillingMode: PAY_PER_REQUEST\n\nfunctions:\n  signup:\n    handler: handlers/user.signup\n    events:\n      - http:\n          path: api/user/signup\n          method: post\n  login:\n    handler: handlers/user.login\n    events:\n      - http:\n          path: api/user/login\n          method: post\n  getNotes:\n    handler: handlers/notes.getNotes\n    events:\n      - http:\n          path: api/notes\n          method: get\n  createNote:\n    handler: handlers/notes.createNote\n    events:\n      - http:\n          path: api/notes\n          method: post\n  updateNote:\n    handler: handlers/notes.updateNote\n    events:\n      - http:\n          path: api/notes/{id}\n          method: put\n  deleteNote:\n    handler: handlers/notes.deleteNote\n    events:\n      - http:\n          path: api/notes/{id}\n          method: delete\n  restoreNote:\n    handler: handlers/restore.restoreNote\n    events:\n      - http:\n          path: api/notes/restore/{id}\n          method: post\n  getDeletedNotes:\n    handler: handlers/restore.getDeletedNotes\n    events:\n      - http:\n          path: api/notes/deleted\n          method: get",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "303b6427814fffe2daabe29b6c7c8387",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "12eaefe0-3df6-42a6-97ec-79764e358a64",
    "orgName": "dalmanner",
    "userId": "TBvcv7X1jFm0pF10y7",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "dalmanner",
    "subscription": null,
    "userEmail": "dalmanner@gmail.com",
    "serviceProviderAwsRegion": "eu-north-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "438465124002",
    "projectType": "traditional",
    "versionSf": "4.4.12",
    "serviceProviderAwsCfStackName": "notes-api-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:eu-north-1:438465124002:stack/notes-api-dev/780f9d30-a8de-11ef-9dd0-0e27057fcc1b",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:eu-north-1:438465124002:stack/notes-api-dev/780f9d30-a8de-11ef-9dd0-0e27057fcc1b",
    "serviceProviderAwsCfStackCreated": "2024-11-22T14:31:32.330Z",
    "serviceProviderAwsCfStackUpdated": "2024-11-26T13:37:30.109Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CreateNoteLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:438465124002:function:notes-api-dev-createNote:49",
        "Description": "Current Lambda function version",
        "ExportName": "sls-notes-api-dev-CreateNoteLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetNotesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:438465124002:function:notes-api-dev-getNotes:49",
        "Description": "Current Lambda function version",
        "ExportName": "sls-notes-api-dev-GetNotesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetDeletedNotesLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:438465124002:function:notes-api-dev-getDeletedNotes:10",
        "Description": "Current Lambda function version",
        "ExportName": "sls-notes-api-dev-GetDeletedNotesLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SignupLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:438465124002:function:notes-api-dev-signup:49",
        "Description": "Current Lambda function version",
        "ExportName": "sls-notes-api-dev-SignupLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteNoteLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:438465124002:function:notes-api-dev-deleteNote:49",
        "Description": "Current Lambda function version",
        "ExportName": "sls-notes-api-dev-DeleteNoteLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateNoteLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:438465124002:function:notes-api-dev-updateNote:49",
        "Description": "Current Lambda function version",
        "ExportName": "sls-notes-api-dev-UpdateNoteLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "LoginLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:438465124002:function:notes-api-dev-login:49",
        "Description": "Current Lambda function version",
        "ExportName": "sls-notes-api-dev-LoginLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "RestoreNoteLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:eu-north-1:438465124002:function:notes-api-dev-restoreNote:49",
        "Description": "Current Lambda function version",
        "ExportName": "sls-notes-api-dev-RestoreNoteLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://ia81fdqska.execute-api.eu-north-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-notes-api-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-eu-north-1-8a7e997d-481a",
        "ExportName": "sls-notes-api-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}